# -*- mode: ruby -*-
# vi: set ft=ruby :
$hostsfile_update = <<-'SCRIPT'
echo -e '192.168.56.110 backup_server.example.com backup_server\n192.168.56.111 client.example.com client' >> /etc/hosts
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config && systemctl restart sshd
SCRIPT
$ansible = <<-'SCRIPT'
yum install -y epel-release
yum install -y ansible 
SCRIPT
$borg = <<-'SCRIPT'
yum install -y epel-release
yum install -y borgbackup
SCRIPT
$sshd_config = <<-'SCRIPT'
echo vagrant | su - vagrant <<- EOF
ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P ""
sshpass -p vagrant ssh-copy-id -o StrictHostKeyChecking=no vagrant@client.example.com && sshpass -p vagrant ssh-copy-id -o StrictHostKeyChecking=no node2.example.com
EOF
SCRIPT
Vagrant.configure("2") do |config|

  config.vm.define "client" do |client|
    client.vm.box = "centos/8"
    client.vm.hostname = "client.example.com"
    client.vm.network "private_network", ip: "192.168.56.111"
    client.vm.provision "shell", inline: $hostsfile_update    
    client.vm.provision "shell", inline: $borg
    config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--audio", "none"]
    end
  end
  
  config.vm.define "backup_server", primary: true do |backup_server|
    backup_server.vm.box = "centos/8"
    backup_server.vm.hostname = "backup_server.example.com"
    backup_server.vm.network "forwarded_port", guest: 80, host: 8080
    backup_server.vm.network "private_network", ip: "192.168.56.110"
    backup_server.vm.provision "shell", inline: $ansible
    backup_server.vm.provision "shell", inline: $hostsfile_update    
    backup_server.vm.provision "shell", inline: $sshd_config
    backup_server.vm.provision "shell", inline: $borg
    backup_server.vm.provider "virtualbox" do |v|
    config.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--audio", "none"]
    end
 	v.memory = 4096
	v.cpus = 2
    end
  end

end
