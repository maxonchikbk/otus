# -*- mode: ruby -*-
# vi: set ft=ruby :
$hostsfile_update = <<-'SCRIPT'
echo -e '10.0.0.20 pxeserver' >> /etc/hosts
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config && systemctl restart sshd
SCRIPT
$ansible = <<-'SCRIPT'
setenforce 0
yum install -y epel-release
yum install -y ansible
SCRIPT
$sshd_config = <<-'SCRIPT'
echo vagrant | su - vagrant <<- EOF
ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -P ""
sshpass -p vagrant ssh-copy-id -o StrictHostKeyChecking=no vagrant@pxeserver
cd /vagrant/
ansible-galaxy collection install ansible.posix
EOF
SCRIPT
Vagrant.configure("2") do |config|

    config.vm.define "pxeserver" do |server|
      server.vm.box = 'centos/stream8'   
      server.vm.host_name = 'pxeserver'
      server.vm.network :private_network, 
                         ip: "10.0.0.20", 
                         virtualbox__intnet: 'pxenet'    
      server.vm.provision "shell", inline: $ansible 
      server.vm.provision "shell", inline: $hostsfile_update                  
      server.vm.provision "shell", inline: $sshd_config      
      server.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end
      # server.vm.provision "ansible", playbook: "install.yml"    
      end
    
      config.vm.define "pxeclient" do |pxeclient|
        pxeclient.vm.box = 'centos/stream8'
        pxeclient.vm.host_name = 'pxeclient'
        pxeclient.vm.network :private_network, ip: "10.0.0.21"
        pxeclient.vm.provider :virtualbox do |vb|
          vb.memory = "2048"
          vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
          vb.customize [
              'modifyvm', :id,
              '--nic1', 'intnet',
              '--intnet1', 'pxenet',
              '--nic2', 'nat',
              '--boot1', 'net',
              '--boot2', 'none',
              '--boot3', 'none',
              '--boot4', 'none'
            ]
        vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        end    
      end    
    end
    